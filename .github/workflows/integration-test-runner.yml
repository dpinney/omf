name: OMF integration tests

on: push # Run test on any push to any branch to dpinney/omf
        
jobs:
  Ubuntu:
    name: Test OMF on Ubuntu
    runs-on: ubuntu-18.04
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v2 # Checkout whichever ref that triggered this workflow
        with:
          ref: new-testing
      - name: Install regular dependencies
        run: | 
          sudo apt-get -y update
          sudo apt-get -y upgrade
          sudo apt-get -y install python3-pip
          sudo python3 install.py
          sudo pip3 install -r requirements.txt
      - name: Run regular tests
        run: sudo python3 omf/runAllTests.py
      - name: Install special dependencies
        run: |
          sudo pip3 install tensorflow
      - name: Run special tests
        run: |
          cd omf/models
          sudo python3 smartSwitching.py
          sudo python3 networkStructure.py
          sudo python3 forecastTool.py
  # macOS tests are currently allowed to fail
  macOS:
    name: Test OMF on macOS
    runs-on: macos-latest # macOS Catalina 10.15
    steps:
      - uses: actions/checkout@v2
        with:
          ref: new-testing
      - name: Install dependencies
        run: |
          /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
          brew install python
      - name: Install numpy to avoid CVXcanon installation error # Would like to remove this step
        run: |
          pip3 install numpy
      - name: Install dependencies p2
        run: |
          python3 install.py
          pip3 install -r requirements.txt
      - name: Update matplotlib # remove once requirements.txt is updated and networkx/matplotlib is refactored
        run: |
          pip3 install --upgrade matplotlib
      - name: Run tests
        continue-on-error: true # let macOS tests fail for now
        run: |
          python3 omf/runAllTests.py
  # No windows tests are currently run
  Windows:
    name: Test OMF on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: new-testing
